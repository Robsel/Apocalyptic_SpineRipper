buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' } // Parchment repository
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' } // Mixin repository

        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+' // Mixin plugin
        classpath 'org.parchmentmc:librarian:1.+' // Parchment plugin
    }
}
plugins {
    id 'eclipse' // Eclipse integration
    id 'maven-publish' // Maven publishing
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin' // Apply the Mixin plugin
apply plugin: 'org.parchmentmc.librarian.forgegradle' // Apply Parchment plugin


version = '1.0'
group = 'com.robsel.asmain'
archivesBaseName = 'asmain'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'


    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                asmain {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                asmain {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'asmain', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                asmain {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://maven.firstdarkdev.xyz/snapshots"}
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.11'
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.4.9')
    implementation fg.deobf("com.eliotlash.mclib:mclib:20")
    implementation fg.deobf("com.lowdragmc.shimmer:Shimmer-forge:1.20.1-0.2.4") { transitive = false }
    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-1.20.1:1.0.30.d") { transitive = false }
    implementation fg.deobf("com.lowdragmc.multiblocked2:Multiblocked2:1.20.1-1.0.10.a") { transitive = false }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Apocalyptic Spineripper",
                "Specification-Vendor"    : "Robsel",
                "Specification-Version"   : "666",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Robsel",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
